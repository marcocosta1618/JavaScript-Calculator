{"version":3,"sources":["calculatorMachine.js","buttons.js","ButtonElement.js","Footer.js","Calculator.js","reportWebVitals.js","index.js"],"names":["math","create","all","calculatorMachine","createMachine","id","initial","context","display","operand1","operand2","operation","states","start","zero","on","NUMBER","target","actions","OPERATOR","entry","result","PERCENT","EQUALS","CLEAR","getOperand1","getOperator","getOperand2","update_display","assign","event","test","payload","replace","handleDotsAndZeros","clear_display","store_operand1","store_operator1","slice","handleOperators","store_operator2","store_operand2","clear_operator","percentage1","evaluate","percentage2","display_result","repeat_last_operation","reset","buttons","type","key","char","ButtonElement","className","keyboard","onClick","useEffect","window","addEventListener","handleKeydown","removeEventListener","buttonEl","useRef","e","current","click","useState","isClicked","setIsClicked","setTimeout","ref","Footer","href","rel","Calculator","useMachine","state","send","displayFontSize","setDisplayFontSize","style","fontSize","displayRef","rem","width","scrollWidth","map","button","toUpperCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2f5deef.chunk.js","sourcesContent":["import { createMachine, assign } from \"xstate\";\nimport { create, all } from \"mathjs\";\nconst math = create(all);\n\nconst calculatorMachine = createMachine(\n  {\n    id: \"calculator\",\n    initial: \"start\",\n    context: {\n      display: \"0\",\n      operand1: \"0\",\n      operand2: \"0\",\n      operation: \"\"\n    },\n    states: {\n      start: {\n        initial: \"zero\",\n        states: {\n          zero: {\n            id: \"zero\",\n            on: {\n              NUMBER: {\n                target: \"#getOperand1\",\n                actions: \"update_display\"\n              },\n              OPERATOR: {\n                target: \"#getOperator\",\n                actions: [\"store_operand1\", \"store_operator1\"]\n              }\n            },\n            entry: \"reset\"\n          },\n          result: {\n            id: \"result\",\n            on: {\n              NUMBER: {\n                target: \"#getOperand1\",\n                actions: [\"clear_display\", \"update_display\"]\n              },\n              OPERATOR: {\n                target: \"#getOperator\",\n                actions: [\"store_operand1\", \"store_operator2\"]\n              },\n              PERCENT: {\n                target: \".#result\",\n                actions: \"percentage1\"\n              },\n              EQUALS: {\n                target: \".#result\",\n                actions: \"repeat_last_operation\"\n              },\n              CLEAR: \"#zero\"\n            }\n          }\n        }\n      },\n      getOperand1: {\n        id: \"getOperand1\",\n        on: {\n          NUMBER: {\n            target: \".#getOperand1\",\n            actions: [\"update_display\"]\n          },\n          OPERATOR: {\n            target: \"getOperator\",\n            actions: [\"store_operand1\", \"store_operator1\"]\n          },\n          PERCENT: {\n            target: \".#getOperand1\",\n            actions: \"percentage1\"\n          },\n          CLEAR: \"#zero\"\n        }\n      },\n      getOperator: {\n        id: \"getOperator\",\n        on: {\n          OPERATOR: {\n            target: \".#getOperator\",\n            actions: [\"store_operator1\"]\n          },\n          NUMBER: {\n            target: \"getOperand2\",\n            actions: [\"clear_display\", \"update_display\"]\n          },\n          PERCENT: {\n            target: \".#getOperator\",\n            actions: [\"percentage1\", \"store_operand1\"]\n          },\n          EQUALS: \"#result\",\n          CLEAR: \"#zero\"\n        }\n      },\n      getOperand2: {\n        id: \"getOperand2\",\n        on: {\n          NUMBER: {\n            target: \".#getOperand2\",\n            actions: [\"update_display\"]\n          },\n          OPERATOR: {\n            target: \"getOperator\",\n            actions: [\n              \"store_operand2\",\n              \"display_result\",\n              \"store_operand1\",\n              \"clear_operator\",\n              \"store_operator1\"\n            ]\n          },\n          PERCENT: {\n            target: \".#getOperand2\",\n            actions: [\"store_operand2\", \"percentage2\"]\n          },\n          EQUALS: {\n            target: \"#result\",\n            actions: [\"store_operand2\", \"display_result\"]\n          },\n          CLEAR: \"#zero\"\n        }\n      }\n    }\n  },\n  {\n    actions: {\n      update_display: assign({\n        display: (context, event) => handleDotsAndZeros(context, event)\n      }),\n      clear_display: assign({\n        display: \"\"\n      }),\n      store_operand1: assign({\n        operand1: (context) => context.display\n      }),\n      store_operator1: assign({\n        operation: (context, event) => handleOperators(context, event)\n      }),\n      store_operator2: assign({\n        operation: (context, event) => event.payload\n      }),\n      store_operand2: assign({\n        operand2: (context) => context.display\n      }),\n      clear_operator: assign({\n        operation: \"\"\n      }),\n      percentage1: assign({\n        display: (context) =>\n          math.evaluate(\n            context.display / 100\n          )\n      }),\n      percentage2: assign({\n        display: (context) =>\n          math.evaluate(\n            `${context.operand1 / 100} * ${context.operand2}`\n          )\n      }),\n      display_result: assign({\n        display: (context) =>\n          math.evaluate(\n            `${context.operand1} ${context.operation} ${context.operand2}`\n          )\n      }),\n      repeat_last_operation: assign({\n        display: (context) =>\n          math.evaluate(\n            `${context.display} ${context.operation} ${context.operand2}`\n          )\n      }),\n      reset: assign({\n        display: \"0\",\n        operand1: \"0\",\n        operand2: \"0\",\n        operation: \"\"\n      })\n    }\n  }\n);\n\nexport default calculatorMachine;\n\n// HELPER FUNCTIONS\n\n// callback on update_display action:\n// 1. prevent multiple dots;\n// 2. allows more than 1 leading zero only if first zero is followed by a dot (decimal number):\nfunction handleDotsAndZeros(context, event) {\n  return /^\\./.test(context.display + event.payload)\n    ? (context.display + event.payload).replace(/\\./, \"0.\")  // add leading zero if user digits '.'\n    : /\\./.test(context.display + event.payload)             // (if number is float);\n      ? (context.display + event.payload)\n        .replace(/(?<=(\\d+(\\.)+\\d*))\\./g, \"\")  // keep first dot only AND\n        .replace(/^0+/, \"0\")                   // allow only one leading zero \n      : (context.display + event.payload).replace(/^0+/, \"\") || 0   // allow only one leading zero \n}                                                                   // (if number is integer)\n\n// callback on store_operator1 action (fullfills FCC userstory#13):\n// allows any operator to be followed by minus ('-') except if in 'result' state,\n// so that any minus sign following any operator is cleared on a new operation.\n// if minus is pressed:\n// 1. use it as operator if none is already defined;\n// 2. or append it to any already defined operator (so that operand2 become a negative number: 4 *- 2 => 4 * -2).\nfunction handleOperators(context, event) {\n  if (event.payload !== \"-\") {\n    return context.operation = event.payload\n  }\n  else if (event.payload === \"-\") {\n    if (/[+-/*]/.test(context.operation)) {\n      return (context.operation = context.operation + '-').slice(0, 2)\n    }\n    return context.operation = '-'\n  }\n}","const buttons = [\n  {\n    id: \"nine\",\n    type: \"number\",\n    key: \"9\",\n    char: \"9\"\n  },\n  {\n    id: \"eight\",\n    type: \"number\",\n    key: \"8\",\n    char: \"8\"\n  },\n  {\n    id: \"seven\",\n    type: \"number\",\n    key: \"7\",\n    char: \"7\"\n  },\n  {\n    id: \"six\",\n    type: \"number\",\n    key: \"6\",\n    char: \"6\"\n  },\n  {\n    id: \"five\",\n    type: \"number\",\n    key: \"5\",\n    char: \"5\"\n  },\n  {\n    id: \"four\",\n    type: \"number\",\n    key: \"4\",\n    char: \"4\"\n  },\n  {\n    id: \"three\",\n    type: \"number\",\n    key: \"3\",\n    char: \"3\"\n  },\n  {\n    id: \"two\",\n    type: \"number\",\n    key: \"2\",\n    char: \"2\"\n  },\n  {\n    id: \"one\",\n    type: \"number\",\n    key: \"1\",\n    char: \"1\"\n  },\n  {\n    id: \"zero\",\n    type: \"number\",\n    key: \"0\",\n    char: \"0\"\n  },\n  {\n    id: \"decimal\",\n    type: \"number\",\n    key: \".\",\n    char: \".\"\n  },\n  {\n    id: \"add\",\n    type: \"operator\",\n    key: \"+\",\n    char: \"+\"\n  },\n  {\n    id: \"subtract\",\n    type: \"operator\",\n    key: \"-\",\n    char: \"-\"\n  },\n  {\n    id: \"multiply\",\n    type: \"operator\",\n    key: \"*\",\n    char: \"x\",\n    payload: \"*\"\n  },\n  {\n    id: \"divide\",\n    type: \"operator\",\n    key: \"/\",\n    char: \"÷\",\n    payload: \"/\"\n  },\n  {\n    id: \"percentage\",\n    type: \"operator\",\n    key: \"%\",\n    char: \"%\"\n  },\n  {\n    id: \"equals\",\n    type: \"operator\",\n    key: \"Enter\",\n    char: \"=\"\n  },\n  {\n    id: \"clear\",\n    type: \"operator\",\n    key: \"c\",\n    char: \"C\"\n  }\n];\n\nexport default buttons;","import { useState, useEffect, useRef } from 'react';\nimport { PropTypes } from 'prop-types';\n\nfunction ButtonElement({ id, className, char, keyboard, onClick }) {\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n    return () => window.removeEventListener('keydown', handleKeydown);\n  })\n\n  let buttonEl = useRef(null);\n\n  function handleKeydown(e) {\n    if (e.key === keyboard) {\n      buttonEl.current.click();\n    }\n  }\n\n  const [isClicked, setIsClicked ] = useState(false);   // state variable add/remove css animation class\n\n  function trigAnim() {\n    const reset = () => {\n      setIsClicked(false);\n    }\n    setIsClicked(true);\n    setTimeout(reset, 150);\n  }\n\n  return (\n    <button\n      id={id}\n      key={id}\n      className={`${className} ${isClicked ? 'clicked' : ''}`}\n      char={char}\n      onClick={() => {\n        onClick();\n        trigAnim();\n      }}\n      ref={buttonEl}\n    >\n      {char}\n    </button>\n  )\n}\n\nButtonElement.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string, \n  char: PropTypes.string,\n  keyboard: PropTypes.string, \n  onClick: PropTypes.func\n}\n\nexport default ButtonElement","export default function Footer() {\n    return (\n        <footer>\n            <p>Marco Costa 2021. The <a href=\"https://github.com/marcocosta1618/JavaScript-Calculator\"\n                target=\"_blank\" rel=\"noreferrer\">code of this app</a> is hosted at GitHub.</p>\n        </footer>\n    )\n}","import calculatorMachine from \"./calculatorMachine.js\";\nimport { useMachine } from \"@xstate/react\";\nimport { useRef, useState, useEffect } from \"react\";\nimport buttons from \"./buttons.js\";\nimport ButtonElement from \"./ButtonElement.js\";\nimport Footer from \"./Footer.js\";\nimport './style/Calculator.css';\n\nexport default function Calculator() {\n  // finite state machine (calculatorMachine) handles app state:\n  const [state, send] = useMachine(calculatorMachine);\n\n  // send events to state machine on click (update state):\n  function onClick(button) {\n    switch (button.char) {\n      case \"C\":\n        send([{ type: \"CLEAR\" }]);\n        break;\n      case \"=\":\n        send([{ type: \"EQUALS\" }]);\n        break;\n      case \"%\":\n        send([{ type: \"PERCENT\" }]);\n        break;\n      default:\n        send([{ type: button.type.toUpperCase(), payload: button.payload ?? button.char }]);\n    }\n  }\n  ////////////////////////////////////////////////////////\n\n  // measure displayed number width and adjust font-size:\n  const [displayFontSize, setDisplayFontSize] = useState('2rem');\n  const style = { fontSize: displayFontSize };\n  const displayRef = useRef(null);\n  const rem = useRef(2);\n  useEffect(() => {\n    let width = displayRef.current.scrollWidth;\n    if (width > 224) {\n      while (width > 224) {\n        rem.current -= 0.035;\n        width -= 5;\n        rem.current < 0.8 && (rem.current = 0.8);\n      }\n    }\n    else if (width < 224) {\n      while (width < 224) {\n        rem.current += 0.035;\n        width += 5;\n        rem.current > 2 && (rem.current = 2);\n      }\n    }\n    setDisplayFontSize(`${rem.current}rem`);\n  }, [state.context.display])\n  ////////////////////////////////////////////////////////////////////////\n\n  return (\n    <>\n      <h2>JavaScript Calculator</h2>\n      <div className=\"Calculator\">\n        <div id=\"display\" ><span ref={displayRef} style={style}>{state.context.display}</span></div>\n        <div className=\"keyboard-grid\">\n          {buttons.map((button) => {\n            return (\n              <ButtonElement\n                id={button.id}\n                key={button.id}\n                char={button.char}         // displayed character\n                keyboard={button.key}      // keyboard shortcut\n                className={button.type}    // number or operator\n                onClick={(e) => onClick(button)}\n              >\n              </ButtonElement>\n            )\n          })}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Calculator from './Calculator.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}